# -*- coding: utf-8 -*-
# import re
# import video_subtitles
# from fuzzywuzzy import fuzz
#
# text = "Дорогие друзья, приветствую вас на канале BOOHXPERT8. Сегодня пробуем отыскать штатное расписание в Один из бугалтерии. Мы знаем, что в программе ведется кадровый учет, а штатное расписание обязательно и кадровый документ. Поэтому вопрос, где в Один из бугалтерии штатное расписание вполне оправдан. Однако в бугалтерии ограничены зарплатные и кадровый блок. Поэтому такого документа как штатное расписание, например, в зуб нет. Но есть отчет штатные сотрудники, на основе которого можно создать штатное расписание. Прежде всего, нам необходимо убедиться, что в нашей базе ведется кадровый учет. Для этого проходим в раздел зарплатой и кадры, настройки зарплаты. Общие настройки проверяем. Переключатель учет расчетов по заработной платии кадровый учет ведутся должен стоять в этой программе. Следующая настройка функциональность. Через главная функциональность мы проходим во вкладку сотрудники и проверяем флаг кадровые документы. Он должен стоять. Это значит, что оформление приема, перевода и увольнения ведется в этой базе. Но естественно, кадровые документы должны быть заполнены в базе. После этого можно переходить к отчету. Через зарплатую кадры проходим отчет и по кадрам, идем по ссылке штатные сотрудники и давайте сформируем сначала отчет со стандартными настройками. Перед нами отчет, не слишком он информативен, не очень похож на штатное расписание и содержит много лишней информации. Для того, чтобы настроить отчет в соответствии со штатным расписанием, понимая, какие нам нужны сведения, давайте сначала вспомним, как должен выглядеть этот документ. Штатное расписание, организация утверждается в настоящей форму. Однако, как правило, это делают на основе унифицированные формы T3. Мы видим, что здесь нам потребуется структурное подразделение, должность, количество штатных единиц, старивная ставка и надбавки. Все эти сведения можно вывести в отчете штатные сотрудники. Пройдем в настройки. Вид у нашей формы должен быть расширенный. Вкладка фильтры, оставляем организация, а вот группа и группа или это не нужная нам информация, не нужны нам отборы. Только если нам нужны сотрудники, например, которые работают в данный момент в организации, то есть исключая уволеных, мы можем оставить в группе или дату увольнения не заполнена. И в этом случае у нас сформируется состав сотрудников, которые работают на заданную дату в организации. Но если нам нужны ивакантные должности, с которых были уволены сотрудники, значит нам нужны сведения без ограничения даты увольнения. Обратите внимание, сейчас у нас появился сотрудник, который был в этом году уволен. Теперь настроим поля. Убираем организация, оставляем подразделения, мы помним, что нам нужны сотрудники, табельный номер. Если он только вам нужен, в вашем отчете, должность, вторивная ставка, очевидно, нужна дата приема, не нужна дату увольнения, оставляем для уволенных сотрудников ивакантных должностей, телефон рабочий и остальные сведения лишнее. Также мы помним, что в нашей форме штатное расписание есть такие сведения, как надбавки. Поэтому в настройках отчета штатной сотрудники нам необходимы вывести. Сведения о доплатах. Для этого в окнобке добавить мы открываем папку работа, далее приказа приеми, потому что эти сведения в этом приказе у нас отражены, далее находим на числение, открываем на именовании. Кроме на именовании нам нужен еще размер, поэтому снова проходим по кнопке добавить в работу, приказа приеми, на числение и размер. Выбрали, передвигаем, поближе, проверяем структуру, оставляем ее стандартные. Теперь можем закрыть и сформировать. Мы видим, что сформированный отчет более компактный и содержит сведения. Не только оба кладе, но и он отбавках. Еще у нас показано одна вакантная должность по уволенному недавно сотруднику. Сформированный отчет можно сохранить формате Excel или PDF, как вам удобно. Я сохраняю. В Excel, например, называю его штатные сотрудники. Вот так он выглядит. И на основе этого документа можно сформировать форму штатного расписания, либо распечатать и перенести сведения уже в готовую форму штатного расписания. И настройки данного отчета можно сохранить по кнопке папка, сохранить как, назовем для штатного расписания, проходим в разделы, в которых должен сохраниться этот отчет, например, это раздел кадры, и нажимаем на сохранить. Наша чет настроен, сформирован и выгружен в Excel. А вы, друзья, как формируете ваши штатные расписания? Еще вариант настройка есть в нашей статье штатное расписание в один из бугалтерия. Если видео оказалось полезным, подписывайтесь на наш канал. У нас много всего нужного. Нажимайте на колокольчик и с размещением нового видео вам придет уведомления. А у меня все. До новых встреч."
# sentences = [x for x in re.split(r"[//.|//!|//?]", text) if x != ""]
# subs = video_subtitles.get_subtitles('https://www.youtube.com/watch?v=TpIrJmVwfBo')
#
# cleared_timecodes = []
#
#
# while len(subs) > 0:
#     if fuzz.ratio(subs[0]['text'], sentences[0]) > 40:
#         cleared_timecodes.append((subs[0]['start'], sentences[0]))
#         sentences.pop(0)
#         subs.pop(0)
#     else:
#         subs.pop(0)
#
# for i in cleared_timecodes:
#     print(i)

# import chapter_generator
#
# ch = chapter_generator.get_chapters('https://www.youtube.com/watch?v=TpIrJmVwfBo')
#
# for i in ch:
#     print(i)
#
#
# from recognizer import recognize
#
# perem = recognize('Штатное_расписание_в_1С_8_3_Бухгалтерия_где_найти_как_состав.wav')
# for i in perem:
#     print(i)


import chapter_generator
import recognizer

chapters = chapter_generator.get_chapters("https://www.youtube.com/watch?v=TpIrJmVwfBo")
sentences = recognizer.recognize(111)

merged_data = []

for i, (chapter_time, chapter_text) in enumerate(chapters):
    # время текущей главы
    c_minutes, c_seconds = chapter_time.split(':')
    c_minutes, c_seconds = int(c_minutes), int(c_seconds)

    # время следующей главы
    next_chapter_time = chapters[i + 1][0] if i + 1 < len(chapters) else '100000:00'
    n_c_minutes, n_c_seconds = next_chapter_time.split(':')
    n_c_minutes, n_c_seconds = int(n_c_minutes), int(n_c_seconds)

    chapter_data = {'time': chapter_time, 'text': chapter_text, 'elements': []}

    for subtitle in sentences:
        # время предложения
        s_minutes, s_seconds = subtitle['start'].split(":")
        s_minutes, s_seconds = int(s_minutes), int(s_seconds)

        if c_minutes < s_minutes < n_c_minutes:
            chapter_data['elements'].append(subtitle)
        elif c_minutes == s_minutes == n_c_minutes and c_seconds < s_seconds < n_c_seconds:
            chapter_data['elements'].append(subtitle)
        elif c_minutes == s_minutes and s_seconds > c_seconds:
            chapter_data['elements'].append(subtitle)
        elif n_c_minutes == s_minutes and s_seconds < n_c_seconds:
            chapter_data['elements'].append(subtitle)

    merged_data.append(chapter_data)

for i in merged_data:
    print(i)







